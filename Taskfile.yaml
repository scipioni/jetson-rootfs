# https://taskfile.dev
# https://www.sobyte.net/post/2022-04/taskfile/

version: "3"

vars:
  GREETING: Welcome, Crew!

dotenv: [".env"]

tasks:
  default:
    cmds:
      - go-task -l
    silent: true

  build:
    deps: [debootstrap, base]
    desc: "build image"
    cmds:
      - echo building

  clean:
    cmds:
      - sudo rm -fR ${ROOTFS}

  debootstrap:tar:
    cmds:
      - |
        #mkdir -p $RUNTIME
        #echo $TAR
        debootstrap \
        --verbose \
        --no-check-gpg \
        --make-tarball=$TAR \
        --arch=${ARCH} \
        ${RELEASE} \
        ${ROOTFS} \
        ${REPO}
    status:
      - test -f $TAR

  debootstrap:
    deps: [debootstrap:tar]
    preconditions:
      - test -f ${TAR}
    cmds:
      - |
        sudo debootstrap \
          --verbose \
          --foreign \
          --no-check-gpg \
          --unpack-tarball=${TAR} \
          --arch=${ARCH} \
          ${RELEASE} \
          ${ROOTFS} \
          ${REPO}
        sudo install -Dm755 /usr/bin/qemu-aarch64-static ${ROOTFS}/usr/bin/qemu-aarch64-static
        sudo chroot ${ROOTFS} /debootstrap/debootstrap --second-stage

    status:
      - test -f $ROOTFS/etc/hostname

  cli:
    cmds:
      - |
        sudo arch-chroot $ROOTFS

  cli:orin:
    cmds:
      - |
        sudo arch-chroot runtime/orin-os

  base:
    cmds:
      - |
        sudo rsync -rv overlay/ $ROOTFS/
        sudo arch-chroot $ROOTFS <<EOF
        apt update
        apt -y upgrade
        apt -y install locales
        #/usr/sbin/locale-gen
        systemctl enable systemd-networkd.service
        EOF

  packages:base:
    cmds:
      - |
        sudo arch-chroot $ROOTFS <<EOF
        mkdir -p /opt/nvidia/l4t-packages/
        touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall
        apt -f install nvidia-l4t-core

        apt-get install --no-install-recommends -y \
          mtd-utils \
          parted \
          openssh-server \
          vim \
          psmisc \
          jetson-gpio-common \
          python-jetson-gpio \
          python3-jetson-gpio \
          nvidia-l4t-3d-core \
          nvidia-l4t-camera \
          nvidia-l4t-configs \
          nvidia-l4t-cuda \
          nvidia-l4t-firmware \
          nvidia-l4t-gbm \
          nvidia-l4t-gputools \
          nvidia-l4t-graphics-demos \
          nvidia-l4t-gstreamer \
          nvidia-l4t-init \
          nvidia-l4t-initrd \
          nvidia-l4t-jetson-io \
          nvidia-l4t-jetsonpower-gui-tools \
          nvidia-l4t-libvulkan \
          nvidia-l4t-multimedia-utils \
          nvidia-l4t-multimedia \
          nvidia-l4t-nvfancontrol \
          nvidia-l4t-nvpmodel-gui-tools \
          nvidia-l4t-nvpmodel \
          nvidia-l4t-nvsci \
          nvidia-l4t-oem-config \
          nvidia-l4t-openwfd \
          nvidia-l4t-optee \
          nvidia-l4t-pva \
          nvidia-l4t-tools \
          nvidia-l4t-vulkan-sc-dev \
          nvidia-l4t-vulkan-sc-samples \
          nvidia-l4t-vulkan-sc-sdk \
          nvidia-l4t-vulkan-sc \
          nvidia-l4t-wayland \
          nvidia-l4t-weston \
          nvidia-l4t-x11 \
          nvidia-l4t-xusb-firmware \
          nvidia-l4t-display-kernel \
          nvidia-l4t-kernel-dtbs \
          nvidia-l4t-kernel-headers \
          nvidia-l4t-kernel \
          nvidia-l4t-bootloader
        EOF

        sudo du $ROOTFS -hs

  packages:mev:
    cmds:
      - |
        sudo arch-chroot $ROOTFS <<EOF
          apt-get install --no-install-recommends -y \
            cuda \
            nvidia-cudnn8-dev \
            libdc1394-utils libdc1394-22-dev \
            wget \
            git \
            cmake \
            python3-dev \
            python3-numpy

        EOF

  optimize:
    cmds:
      - |
        sudo arch-chroot $ROOTFS <<EOF
        apt autoremove
        apt autoclean
        apt clean
        EOF
        sudo du $ROOTFS -hs

  sync:
    cmds:
      - |
        cd $RUNTIME
        sudo tar -c rootfs | nc 192.168.122.18 1234
